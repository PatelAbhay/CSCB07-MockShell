==== A2 phase I marking ====

Group number: 0096
UTORID usernames of members: pate1101, patelt26, santhos7, shaiskan
Total deductions: 7
Grade: C

Your team's Phase II grade is based on this scale:

    https://transcripts.utoronto.ca/faqs/grade-scale/
When converting from letter grade to numerical grade, we will use the higher end of the letter grade to convert your mark.
--For example, the higher end of A+ is 100.
--For example, the higher end of A is 89.
.
.
.
In the event that you get a F, your conversion from letter grade to numerical grade will be based on the discretion of the instructor. 

The way we graded is as follows: your team starts with an A+. When errors and
problems are found, you will lose 0, 1, 2, or 3 letter steps, depending on the
severity. As an example, if you lost two steps, your team would earn an A-:

     A+ -> A
     A -> A-

You were asked to follow the Scrum process. A big part of that is to maintain
a product backlog and a sprint backlog. 

==== Product and Sprint backlogs ==== [up to -6]

Several steps can be lost for these kinds of issues:

- [ ]  No evidence of Product or Sprint backlog -6
- [ ]  No evidence of team assigning tasks to team members -3
- [ ]  SB items not taken directly from PB -1
- [ ]  SB items not broken down into smaller steps -1
- [ ]  PB, SB uses noticeably bad grammar and/or spelling -2

[Total deductions in this section: 0]

==== Java Style ==== [up to -6]

Steps can be lost for these kinds of issues:

- [X]  Java naming conventions not followed (camelCase, no_underscores) -1
- [ ]  Instance variable names not meaningful (e.g., "Label1" is not a good name) -1
- [X]  Bad indentation -1
- [ ]  Lack of consistency in style across files -1
- [ ]  Bad use of whitespace: too much or too little -1
- [ ]  Class names are frequently not noun phrases -1
- [ ]  Method names are frequently not verb phrases -1
- [ ]  Not following the 80character column width limit. -1

TA COMMENTS:
1) Bad indentation in Cat, Load, Cd, Checker, CommandHandler, Ls, and many other files.
2) A2 should be named as a2.

[Total deductions in this section: 2]

==== Design ==== [up to -6]

Several steps can be lost for these kinds of issues:

- [ ]  public instance variables instead of setters and getters -1 to -2
- [ ]  not a good breakdown of classes and methods (everything static;) -1
- [ ]  long methods exist (more than roughly 30 lines from brace to brace) -1
- [ ]  hard to add new commands -1
- [ ]  no unified path handling mechanism -2
- [ ]  redirection doesn't easily incorporate new commands -2

[Total deductions in this section: 0]

==== Javadoc ==== [up to -3]

Several steps can be lost for these kinds of issues:

- [ ]  Missing Javadoc on methods -1 for infrequent problems, up to -3 for frequent
- [ ]  Missing Javadoc on class -1
- [ ]  No Javadoc on instance vars -1
- [ ]  Missing use @param and @return tags -1
- [ ]  Unclear English: bad grammar, bad spelling up to -2

[Total deductions in this section: 0]

==== Testing ==== [up to -6] 
Several steps can be lost for these kinds of issues:

- [ ]  No test cases exist for public methods -6
- [ ]  Some testing done for all classes and methods, but not thoroughly up to -3
- [ ]  Test quality is inadequate or tests uninformative -1 to -2
       e.g., testing using lots of print statements instead of assert calls
- [ ]  Code not written to be testable -2

[Total deductions in this section: 0]

==== Correctness ==== [up to -6]

- [ ]  Code doesn't compile without modification (if the fix is simple) -1
- [X]  Code that is complete (from the SB) doesn't work completely: up to -2
- [X]  Code crashes: -3
- [ ]  Each missing/incomplete feature -1

[Total deductions in this section: 5]


TA COMMENTS:
The test cases for this assignment can be found in the following link. 
Please review the test cases that did not pass for your project: https://docs.google.com/document/d/1R80rTgSJsSesmAM8cckacUo12BQN1trhTGSRwlsbIo4/edit?usp=sharing

Note: Some test cases were tweaked for your benefit to not penalize you based on previous failed test cases. 

Note: 1 mark was deducted for 4 failing test cases. 

Test case ID's not passed: [28, 31, 63, 82, 111, 114, 102, 106, 107]
Number of failed test cases [9]:


1) 
ID: 28
Actual output:
- ls on file not working
ls folder1_1    /folder1_1/folder2_1    /folder1_1/file1
Error: Invalid Directory : /folder1_1/file1 is not a valid directory


2) 
ID: 31
Actual output:
- ls on file not working
ls -R folder1_1    /folder1_1/folder2_1    file0
Error: Invalid Directory : file0 is not a valid directory


3) 
ID: 63
Actual output:
mkdir folder1_4       /folder1_1/folder2_2
ls
folder1_1
file0
folder1_2
folder1_3

ls /folder1_1
Path: /folder1_1
folder2_1
folder1_4
folder2_2

4) 
ID: 82
Actual output:
cp /folder_original/folder_target/file_original1     /folder_original/folder_target/file_original2
cat      /folder_original/folder_target/file_original2
original2

5) 
ID: 111
Actual output:
find   /a2b/folder1_1     /a2b/folder1_2          -type f   -name "file_x"
Error : Multiple Parameters have been provided


6) 
ID: 114
Actual output:
- code crashes
find  /a2b/folder1_1   /a2b/folder1_2 -type d -name    "folder_x" > /file0
     [java] Exception in thread "main" java.lang.NullPointerException
     [java] 	at commands.Find.printMatches(Unknown Source)

7) 
ID: 102
Actual output:
- save doesn't work (either save.ser or save) 

save /Users/sallymoon/Desktop/TA/save.ser
     [java] $Error: Invalid File : save /Users/sallymoon/Desktop/TA/save.ser
save /Users/sallymoon/Desktop/TA/save


8) 
ID: 106
Actual output:
- couldn't be tested because save/ load didn't work


9) 
ID: 107
Actual output:
- couldn't be tested because save/ load didn't work
